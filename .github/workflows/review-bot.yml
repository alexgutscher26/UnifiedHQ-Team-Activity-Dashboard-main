name: Review Bot

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_review:
    types: [submitted]

jobs:
  review-bot:
    name: Review Bot
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run review bot
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            // Get changed files
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            let reviewComments = [];

            // Check for common issues
            for (const file of files) {
              const { data: content } = await github.rest.repos.getContent({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: file.filename,
              });
              
              const fileContent = Buffer.from(content.content, 'base64').toString();
              const lines = fileContent.split('\n');
              
              // Check for console.log statements
              lines.forEach((line, index) => {
                if (line.includes('console.log') && !line.includes('// eslint-disable')) {
                  reviewComments.push({
                    path: file.filename,
                    line: index + 1,
                    body: '🤖 **Review Bot**: Please remove console.log statements before merging.',
                    side: 'RIGHT'
                  });
                }
              });
              
              // Check for TODO comments
              lines.forEach((line, index) => {
                if (line.includes('TODO') || line.includes('FIXME') || line.includes('HACK')) {
                  reviewComments.push({
                    path: file.filename,
                    line: index + 1,
                    body: '🤖 **Review Bot**: Please address TODO/FIXME comments before merging.',
                    side: 'RIGHT'
                  });
                }
              });
              
              // Check for hardcoded values
              lines.forEach((line, index) => {
                if (line.includes('localhost') || line.includes('127.0.0.1')) {
                  reviewComments.push({
                    path: file.filename,
                    line: index + 1,
                    body: '🤖 **Review Bot**: Consider using environment variables instead of hardcoded values.',
                    side: 'RIGHT'
                  });
                }
              });
              
              // Check for missing error handling
              if (file.filename.includes('api/') && lines.some(line => line.includes('fetch(') || line.includes('axios.'))) {
                const hasTryCatch = lines.some(line => line.includes('try') || line.includes('catch'));
                if (!hasTryCatch) {
                  reviewComments.push({
                    path: file.filename,
                    line: 1,
                    body: '🤖 **Review Bot**: Consider adding error handling for API calls.',
                    side: 'RIGHT'
                  });
                }
              }
            }

            // Submit review comments
            if (reviewComments.length > 0) {
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                event: 'COMMENT',
                comments: reviewComments
              });
              
              console.log(`Submitted ${reviewComments.length} review comments`);
            }
