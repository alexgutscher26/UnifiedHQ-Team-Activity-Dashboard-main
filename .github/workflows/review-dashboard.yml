name: Review Dashboard

on:
  schedule:
    - cron: '0 9 * * 1-5' # Run every weekday at 9 AM
  workflow_dispatch:

jobs:
  review-dashboard:
    name: Generate Review Dashboard
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate review metrics
        uses: actions/github-script@v7
        with:
          script: |
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'all',
              per_page: 100,
              sort: 'updated',
              direction: 'desc'
            });

            // Calculate metrics
            const now = new Date();
            const lastWeek = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);
            const lastMonth = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);

            const recentPRs = prs.filter(pr => new Date(pr.created_at) > lastWeek);
            const monthlyPRs = prs.filter(pr => new Date(pr.created_at) > lastMonth);

            const openPRs = prs.filter(pr => pr.state === 'open');
            const closedPRs = prs.filter(pr => pr.state === 'closed');

            // Calculate review times
            let totalReviewTime = 0;
            let reviewedPRs = 0;

            for (const pr of closedPRs) {
              if (pr.merged_at) {
                const created = new Date(pr.created_at);
                const merged = new Date(pr.merged_at);
                const reviewTime = (merged - created) / (1000 * 60 * 60 * 24); // days
                totalReviewTime += reviewTime;
                reviewedPRs++;
              }
            }

            const avgReviewTime = reviewedPRs > 0 ? (totalReviewTime / reviewedPRs).toFixed(1) : 0;

            // Generate dashboard
            const dashboard = `
            # ðŸ“Š Code Review Dashboard

            ## ðŸ“ˆ Metrics (Last 7 Days)
            - **New PRs**: ${recentPRs.length}
            - **Open PRs**: ${openPRs.length}
            - **Closed PRs**: ${closedPRs.length}
            - **Average Review Time**: ${avgReviewTime} days

            ## ðŸ“‹ Open PRs (${openPRs.length})
            ${openPRs.map(pr => `- [${pr.title}](${pr.html_url}) - ${pr.user.login} (${Math.floor((now - new Date(pr.created_at)) / (1000 * 60 * 60 * 24))} days ago)`).join('\n')}

            ## ðŸŽ¯ Review Targets
            - **High Priority**: PRs older than 3 days
            - **Medium Priority**: PRs older than 1 day
            - **Low Priority**: PRs created today

            ## ðŸ“Š Monthly Stats
            - **Total PRs**: ${monthlyPRs.length}
            - **Merged**: ${monthlyPRs.filter(pr => pr.merged_at).length}
            - **Closed**: ${monthlyPRs.filter(pr => pr.state === 'closed' && !pr.merged_at).length}

            ---
            *Generated on ${now.toISOString().split('T')[0]}*
            `;

            // Create or update issue
            const { data: issues } = await github.rest.issues.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'review-dashboard',
              state: 'open'
            });

            if (issues.length > 0) {
              // Update existing issue
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issues[0].number,
                body: dashboard
              });
            } else {
              // Create new issue
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `ðŸ“Š Review Dashboard - ${now.toISOString().split('T')[0]}`,
                body: dashboard,
                labels: ['review-dashboard', 'automated']
              });
            }

            console.log('Review dashboard updated');
