# ===========================================
# UnifiedHQ Environment Configuration
# ===========================================
# Copy this file to .env.local and fill in your values
# Never commit .env.local to version control

# ===========================================
# APPLICATION SETTINGS
# ===========================================
NODE_ENV=development
NEXT_PUBLIC_APP_URL=http://localhost:3000
NEXT_PUBLIC_APP_NAME=UnifiedHQ

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# PostgreSQL database connection string
# Format: postgresql://username:password@host:port/database
DATABASE_URL=postgresql://username:password@localhost:5432/unifiedhq

# ===========================================
# AUTHENTICATION & SECURITY
# ===========================================
# Better Auth configuration
BETTER_AUTH_SECRET=your-super-secret-key-here-minimum-32-characters
BETTER_AUTH_URL=http://localhost:3000

# ===========================================
# GITHUB INTEGRATION (IMPLEMENTED)
# ===========================================
# GitHub OAuth App credentials for AUTHENTICATION (sign in with GitHub)
# Get these from: GitHub Settings > Developer settings > OAuth Apps
# Callback URL: http://localhost:3000/api/auth/callback/github
GH_CLIENT_ID=your-github-auth-client-id
GH_CLIENT_SECRET=your-github-auth-client-secret

# GitHub OAuth App credentials for INTEGRATIONS (connect GitHub data)
# Separate OAuth app for integration-specific permissions and callback
# Callback URL: http://localhost:3000/api/integrations/github/callback
GITHUB_CLIENT_ID=your-github-integration-client-id
GITHUB_CLIENT_SECRET=your-github-integration-client-secret

# ===========================================
# SLACK INTEGRATION (IMPLEMENTED)
# ===========================================
# Slack App credentials
# Get these from: https://api.slack.com/apps
SLACK_CLIENT_ID=your-slack-client-id
SLACK_CLIENT_SECRET=your-slack-client-secret
SLACK_BOT_TOKEN=xoxb-your-bot-token-here

# Slack OAuth redirect URI
SLACK_REDIRECT_URI=http://localhost:3000/api/integrations/slack/callback

# ===========================================
# AI & OPENAI INTEGRATION (IMPLEMENTED)
# ===========================================
# OpenRouter API key for AI features
# Status: Fully implemented with OpenRouter/OpenAI integration + intelligent mock fallback
OPENROUTER_API_KEY="sk-or-v1-your-actual-api-key-here"
OPENROUTER_BASE_URL=https://openrouter.ai/api/v1

# ===========================================
# REDIS CACHING (IMPLEMENTED)
# ===========================================
# Redis connection string for caching
# Status: Fully implemented with TTL management, intelligent caching, and monitoring

# Option 1: Local Redis (for development)
REDIS_URL=redis://localhost:6379

# Option 2: Upstash Redis (recommended for production/cloud)
# Get your Redis URL from: https://upstash.com/
# Format: redis://default:password@endpoint.upstash.io:6379
# REDIS_URL=redis://default:your-upstash-password@your-endpoint.upstash.io:6379

# Option 3: Redis Cloud or other hosted Redis
# REDIS_URL=redis://username:password@your-redis-host:port

# Redis cluster configuration (production only)
REDIS_CLUSTER_ENABLED=false
REDIS_CLUSTER_NODES=redis-node1:6379,redis-node2:6379,redis-node3:6379

# Redis connection pool settings
REDIS_POOL_MIN=2
REDIS_POOL_MAX=10
REDIS_MAX_RETRIES=10
REDIS_RETRY_DELAY=3000
REDIS_CONNECTION_TIMEOUT=20000
REDIS_COMMAND_TIMEOUT=15000

# Upstash-specific settings (optional)
# UPSTASH_REDIS_REST_URL=https://your-endpoint.upstash.io
# UPSTASH_REDIS_REST_TOKEN=your-rest-token

# ===========================================
# ADVANCED CACHING CONFIGURATION (IMPLEMENTED)
# ===========================================
# Cache TTL settings (in milliseconds)
# Status: Advanced caching with Redis, service workers, and intelligent preloading implemented
CACHE_TTL_SHORT=300000    # 5 minutes
CACHE_TTL_MEDIUM=1800000  # 30 minutes
CACHE_TTL_LONG=3600000    # 1 hour

# ===========================================
# CACHING FEATURE FLAGS (IMPLEMENTED)
# ===========================================
# Core caching features
ENABLE_REDIS_CACHE=true
ENABLE_CDN_INTEGRATION=true
ENABLE_SERVICE_WORKER_CACHE=true

# Advanced caching features
ENABLE_INTELLIGENT_PRELOADING=true
ENABLE_BACKGROUND_SYNC=true
ENABLE_CONFLICT_RESOLUTION=true
ENABLE_CACHE_WARMING=true
ENABLE_REALTIME_INVALIDATION=true

# Monitoring features
ENABLE_CACHE_MONITORING=true
ENABLE_PERFORMANCE_TRACKING=true
ENABLE_ERROR_TRACKING=true

# Experimental features (disabled by default)
ENABLE_PREDICTIVE_CACHING=false
ENABLE_ADAPTIVE_TTL=false
ENABLE_COMPRESSION_OPTIMIZATION=false

# Gradual rollout controls
FEATURE_ROLLOUT_PERCENTAGE=100
FEATURE_USER_SEGMENTS=beta,premium

# ===========================================
# CDN CONFIGURATION (IMPLEMENTED)
# ===========================================
# Vercel Edge Network settings
VERCEL_PURGE_API_KEY=your-vercel-purge-api-key
VERCEL_PURGE_ENDPOINT=https://api.vercel.com/v1/purge

# Cache version for service worker updates
CACHE_VERSION=v1.0.0

# ===========================================
# PERFORMANCE MONITORING (IMPLEMENTED)
# ===========================================
# Performance monitoring thresholds
# Status: Performance monitoring fully implemented with scroll optimization and memory leak prevention
PERFORMANCE_THRESHOLD_SLOW=2000
PERFORMANCE_THRESHOLD_CRITICAL=5000

# ===========================================
# ANALYTICS & MONITORING (IMPLEMENTED)
# ===========================================
# Vercel Analytics
# Status: Vercel Analytics fully integrated and working
NEXT_PUBLIC_VERCEL_ANALYTICS_ID=your-vercel-analytics-id

# ===========================================
# CRON JOBS & AUTOMATION (IMPLEMENTED)
# ===========================================
# Secret token for cron job authentication
CRON_SECRET_TOKEN=your-cron-secret-token-here

# ===========================================
# DEVELOPMENT & DEBUGGING (IMPLEMENTED)
# ===========================================
# Enable debug logging
DEBUG=false
NEXT_PUBLIC_DEBUG=false

# Prisma debugging
PRISMA_DISABLE_WARNINGS=false

# Cache configuration for development
CACHE_SKIP_AUTH=false

# Service worker configuration
NEXT_PUBLIC_DISABLE_SW=false

# ===========================================
# CHATBOT INTEGRATION (IMPLEMENTED)
# ===========================================
# ThinkStack chatbot configuration
# Status: Implemented with security measures and environment controls
NEXT_PUBLIC_ENABLE_CHATBOT=true
NEXT_PUBLIC_DEBUG_CHATBOT=false

# ===========================================
# DEVELOPMENT TOOLS (IMPLEMENTED)
# ===========================================
# Hot reload settings
# Status: Basic Next.js development tools
FAST_REFRESH=true
TURBOPACK=false
TSC_COMPILE_ON_ERROR=true

# ===========================================
# DEPLOYMENT SETTINGS (IMPLEMENTED)
# ===========================================
# Build settings
# Status: Basic Next.js build settings
NEXT_TELEMETRY_DISABLED=1
NEXT_PUBLIC_TELEMETRY_DISABLED=1
NEXT_BUILD_ANALYZE=false
NEXT_BUILD_PROFILE=false

# ===========================================
# CORS SETTINGS (IMPLEMENTED)
# ===========================================
# CORS settings
# Status: Basic CORS middleware exists but not configurable
CORS_ORIGIN=http://localhost:3000

# ===========================================
# FEATURE FLAGS (PARTIALLY IMPLEMENTED)
# ===========================================
# Enable/disable specific features
# Status: Basic feature flags exist, formal system not implemented
NEXT_PUBLIC_ENABLE_ANALYTICS=true
NEXT_PUBLIC_ENABLE_ERROR_TRACKING=true
NEXT_PUBLIC_ENABLE_PERFORMANCE_MONITORING=true
NEXT_PUBLIC_ENABLE_AI_FEATURES=true

# ===========================================
# SENTRY ERROR TRACKING (PARTIALLY IMPLEMENTED)
# ===========================================
# Sentry DSN for error tracking and performance monitoring
# Status: Dependencies installed, basic setup exists but not fully configured
NEXT_PUBLIC_SENTRY_DSN=your-sentry-dsn-here
SENTRY_ORG=your-sentry-org
SENTRY_PROJECT=your-sentry-project
NEXT_PUBLIC_SENTRY_RELEASE=1.0.0

# ===========================================
# PRODUCTION SETTINGS
# ===========================================
# For production deployment, update these URLs:
# BETTER_AUTH_URL=https://yourdomain.com
# SLACK_REDIRECT_URI=https://yourdomain.com/api/integrations/slack/callback
# NEXT_PUBLIC_APP_URL=https://yourdomain.com

# ===========================================
# FUTURE FEATURES - NOT YET IMPLEMENTED
# ===========================================
# The following environment variables are for features that are planned
# but not yet implemented in the current codebase.

# ===========================================
# EMAIL CONFIGURATION (PLANNED)
# ===========================================
# SMTP settings for email notifications
# Status: No email functionality implemented yet
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password
SMTP_FROM=noreply@yourdomain.com

# ===========================================
# FILE STORAGE (PLANNED)
# ===========================================
# AWS S3 or similar for file storage
# Status: No file storage implemented yet
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-east-1
AWS_S3_BUCKET=your-s3-bucket-name

# ===========================================
# RATE LIMITING CONFIGURATION (PLANNED)
# ===========================================
# Rate limiting configuration
# Status: Basic rate limiting exists but not configurable via env vars
RATE_LIMIT_MAX=100
RATE_LIMIT_WINDOW=900000
API_RATE_LIMIT=1000
API_RATE_WINDOW=900000

# ===========================================
# LOGGING CONFIGURATION (PLANNED)
# ===========================================
# Log levels: error, warn, info, debug
# Status: Basic console logging only
LOG_LEVEL=info
NEXT_PUBLIC_LOG_LEVEL=warn

# ===========================================
# NOTIFICATION SETTINGS (PLANNED)
# ===========================================
# Notification preferences
# Status: No notification system implemented yet
NOTIFICATION_EMAIL_ENABLED=false
NOTIFICATION_SLACK_ENABLED=false
NOTIFICATION_WEBHOOK_ENABLED=false

# ===========================================
# BACKUP & RECOVERY (PLANNED)
# ===========================================
# Database backup settings
# Status: No backup system implemented yet
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30

# ===========================================
# SECURITY HEADERS (PLANNED)
# ===========================================
# Content Security Policy
# Status: Basic security, no CSP implementation yet
CSP_REPORT_URI=/api/csp-report
CSP_REPORT_ONLY=false
SECURITY_HEADERS_ENABLED=true
HSTS_MAX_AGE=31536000

# ===========================================
# API CONFIGURATION (PLANNED)
# ===========================================
# API rate limiting
# Status: No API versioning system implemented yet
API_VERSION=v1
API_PREFIX=/api

# ===========================================
# WEBHOOK CONFIGURATION (PLANNED)
# ===========================================
# Webhook endpoints
# Status: No webhook system implemented yet
WEBHOOK_GITHUB_PATH=/api/webhooks/github
WEBHOOK_SLACK_PATH=/api/webhooks/slack
WEBHOOK_VERIFY_SIGNATURE=true
WEBHOOK_TIMESTAMP_TOLERANCE=300
GITHUB_WEBHOOK_SECRET=your-github-webhook-secret
SLACK_WEBHOOK_SECRET=your-slack-webhook-secret

# ===========================================
# INTEGRATION SPECIFIC SETTINGS (PLANNED)
# ===========================================
# GitHub API rate limiting
# Status: No configurable API rate limiting yet
GITHUB_API_RATE_LIMIT=5000
GITHUB_API_RATE_RESET=3600

# Slack API settings
SLACK_API_RATE_LIMIT=1000
SLACK_API_RATE_RESET=60

# ===========================================
# COMING SOON INTEGRATIONS (UI ONLY - BACKEND PLANNED)
# ===========================================
# These integrations have UI components but no backend implementation yet

# Microsoft Teams
MICROSOFT_TEAMS_CLIENT_ID=your-teams-client-id
MICROSOFT_TEAMS_CLIENT_SECRET=your-teams-client-secret

# Google Workspace
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# Jira
JIRA_CLIENT_ID=your-jira-client-id
JIRA_CLIENT_SECRET=your-jira-client-secret

# Trello
TRELLO_API_KEY=your-trello-api-key
TRELLO_API_SECRET=your-trello-api-secret

# Discord
DISCORD_CLIENT_ID=your-discord-client-id
DISCORD_CLIENT_SECRET=your-discord-client-secret

# Linear
LINEAR_CLIENT_ID=your-linear-client-id
LINEAR_CLIENT_SECRET=your-linear-client-secret

# Asana
ASANA_CLIENT_ID=your-asana-client-id
ASANA_CLIENT_SECRET=your-asana-client-secret

# ===========================================
# IMPLEMENTATION STATUS SUMMARY
# ===========================================
# ✅ FULLY IMPLEMENTED:
# - Core Application (Next.js 15, TypeScript, Better Auth, PostgreSQL)
# - GitHub Integration (OAuth, repository sync, activity tracking)
# - Slack Integration (OAuth, channel sync, message tracking)
# - AI Integration (OpenRouter/OpenAI with GPT-4o-mini, auto-summaries)
# - Redis Caching (TTL management, intelligent preloading)
# - Performance Monitoring (memory leak prevention, scroll optimization)
# - Service Worker (offline support, background sync)
# - Real-time Updates (Server-Sent Events, live activity feed)
# - Error Boundaries (comprehensive error handling)
# - Vercel Analytics (usage tracking and monitoring)

# ❌ NOT IMPLEMENTED (PLANNED):
# - Email System (SMTP, notifications, templates)
# - File Storage (AWS S3, image uploads)
# - Advanced Security (CSP, webhook signatures)
# - Additional Integrations (Teams, Jira, Trello, Discord, etc.)
# - Database Backup System
# - Advanced Webhook System

# ===========================================
# SETUP INSTRUCTIONS
# ===========================================
# 1. Copy this file to .env.local
# 2. Fill in REQUIRED values (GitHub, Slack, Database, Redis, OpenRouter)
# 3. Set up two GitHub OAuth apps (one for auth, one for integration)
# 4. Configure Slack OAuth app with proper callback URLs
# 5. Set up PostgreSQL database (local or hosted)
# 6. Set up Redis instance (local or hosted)
# 7. Get OpenRouter API key for AI features
# 8. Never commit .env.local to version control
# 9. Test all integrations after configuration
# 10. Monitor logs for any missing environment variables

# ===========================================
# OAUTH CALLBACK URLS
# ===========================================
# GitHub Auth: http://localhost:3000/api/auth/callback/github
# GitHub Integration: http://localhost:3000/api/integrations/github/callback
# Slack Integration: http://localhost:3000/api/integrations/slack/callback